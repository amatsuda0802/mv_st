このコードでは、相対的な視差と深度の変換を行う二つの関数が定義されています。それぞれの関数の詳細を説明します。

### 1. `relative_disparity_to_depth`

#### 機能
相対的な視差（0が近く、1が遠い）を深度に変換します。

#### 引数
- `relative_disparity`: 相対的な視差を持つテンソル。バッチサイズに対応。
- `near`: 近くの深度のテンソル。
- `far`: 遠くの深度のテンソル。
- `eps`: ゼロ割り防止のための微小値（デフォルトは1e-10）。

#### 処理
1. 近い深度（`near`）と遠い深度（`far`）に対する視差を計算します。
   - `disp_near = 1 / (near + eps)`
   - `disp_far = 1 / (far + eps)`
2. 相対的な視差から深度を計算します。
   - `depth = 1 / ((1 - relative_disparity) * (disp_near - disp_far) + disp_far + eps)`

### 2. `depth_to_relative_disparity`

#### 機能
深度を相対的な視差に変換します。

#### 引数
- `depth`: 深度を持つテンソル。バッチサイズに対応。
- `near`: 近くの深度のテンソル。
- `far`: 遠くの深度のテンソル。
- `eps`: ゼロ割り防止のための微小値（デフォルトは1e-10）。

#### 処理
1. 近い深度と遠い深度に対する視差を計算します。
   - `disp_near = 1 / (near + eps)`
   - `disp_far = 1 / (far + eps)`
2. 深度から視差を計算します。
   - `disp = 1 / (depth + eps)`
3. 相対的な視差を計算します。
   - `relative_disparity = 1 - (disp - disp_far) / (disp_near - disp_far + eps)`

### 使用例
このコードは、3Dコンピュータビジョンや深層学習において、視差と深度を相互に変換するのに役立ちます。例えば、ステレオ画像から得られた視差マップを使って、3D空間の位置を理解するために深度に変換したり、逆に深度情報から視差マップを生成する際に使用されます。

このアプローチは、視差と深度の計算における精度を保つために非常に重要です。特に、`eps`を使うことで、数値的な不安定性を防ぐことができます。